"use strict";const state={max:70,canvas:null,context:null,particles:[],stats:null,colors:["#FF5507","#f8f8f8","#eee","#fff","#ddd","#ccc"]};class Particle{constructor(t=0){switch(this.id=t,this.type=this.randomizeType(),this.inBounds=!1,this.coords={x:Math.round(Math.random()*state.canvas.width),y:Math.round(Math.random()*state.canvas.height)},this.velocity={x:(Math.random()<.5?-1:1)*(.7*Math.random()),y:(Math.random()<.5?-1:1)*(.7*Math.random())},this.alpha=.1,this.hex=this.randomFromArray(state.colors),this.color=this.hexToRGBA(this.hex,this.alpha),this.strokeWidth=Math.random()*(Math.random()>.5?1.5:2.5),this.type){case"bubble":this.diameter=this.getCircleDiameter();break;case"line":this.angle=Math.atan2(this.coords.y,this.coords.x),this.length=this.randomFromArray([5,7,3,10]),this.rotateSpeed=this.randomFromArray([10,30,60,120]),this.rotateClockwise=Math.random()<.5}}getCircleDiameter(){let t=0;for(;t<2;)t=7*Math.random()*2;return t}update(){if(this.alpha<1&&(this.alpha+=.01,this.color=this.hexToRGBA(this.hex,this.alpha)),this.coords.x+=this.velocity.x,this.coords.y+=this.velocity.y,"line"===this.type){let t=Math.PI/this.rotateSpeed;this.angle+=this.rotateClockwise?-Math.abs(t):Math.abs(t)}return this.withinBounds()}draw(){switch(state.context.lineWidth=this.strokeWidth,state.context.strokeStyle=this.color,state.context.save(),this.type){case"line":state.context.translate(this.coords.x/2,this.coords.y/2),state.context.rotate(this.angle),state.context.beginPath(),state.context.moveTo(-this.length/2,0),state.context.lineTo(this.length/2,0);break;case"bubble":state.context.beginPath(),state.context.arc(this.coords.x,this.coords.y,this.diameter,0,2*Math.PI,!1)}state.context.stroke(),state.context.restore()}withinBounds(){let t=state.canvas.width/2+5,e=state.canvas.height/2+5,a=this.coords.x/2,s=this.coords.y/2;return this.inBounds=!(a>t||a<-5||s>e||s<-5),this.inBounds}hexToRGBA(t,e){const a=t=>t.replace("#","");return`rgba(${parseInt(a(t).substring(0,2),16)}, ${parseInt(a(t).substring(2,4),16)}, ${parseInt(a(t).substring(4,6),16)}, ${e})`}randomFromArray(t){return _.sample(_.shuffle(t))}randomizeType(){let t=Array(4).fill("bubble");return t.push("line"),this.randomFromArray(t)}}const updateCanvasSize=()=>{state.canvas.width=2*state.canvas.parentNode.offsetWidth,state.canvas.height=2*state.canvas.parentNode.offsetHeight,state.canvas.style.width=state.canvas.parentNode.offsetWidth+"px",state.canvas.style.height=state.canvas.parentNode.offsetHeight+"px"};let pids=0;const generate=()=>{if(state.particles.length<state.max)for(let t=state.particles.length;t<state.max;t++)state.particles.push(new Particle(pids++))},update=()=>{state.particles.length<state.max-5&&generate(),state.particles=state.particles.filter(t=>t.update()),state.context.clearRect(0,0,state.canvas.width,state.canvas.height),state.particles.forEach(t=>t.draw()),requestAnimationFrame(update)},init=()=>{state.canvas=document.querySelector("#canvas-particles"),state.context=state.canvas.getContext("2d"),updateCanvasSize(),generate(),update(),window.addEventListener("resize",updateCanvasSize)};document.addEventListener("DOMContentLoaded",()=>(state.canvas=document.querySelector("#canvas-particles"),state.context=state.canvas.getContext("2d"),updateCanvasSize(),generate(),update(),void window.addEventListener("resize",updateCanvasSize))),window.reloadParticles=(t=>{t.preventDefault(),state.particles=[],state.context.clearRect(0,0,state.canvas.width,state.canvas.height)}),window.logParticles=((t,e=null)=>{t.preventDefault(),null!==e?console.log(state.particles.filter(t=>t.type===e)):console.log(state.particles)});